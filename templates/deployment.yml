apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yml") . | sha256sum }}
    spec:
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      
      ### try tp deploy service to node there no copy of this service exists
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    {{- include "chart.selectorLabels" . | nindent 20 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          args:
            - --config
            - /config/vector.toml
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: data
              mountPath: /data
          {{- if .Values.service.ports }}
          ports:
            {{- range $name, $ctx := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ default .port .containerPort }}
              protocol: {{ default "TCP" .protocol }}
            {{- end }}
          {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "chart.fullname" . }}-config
        - name: data
          {{- if .Values.persistence }}
          persistentVolumeClaim:
            claimName: {{ include "chart.fullname" . }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}